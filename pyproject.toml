[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pytorch-recsys-framework"
dynamic = ["version"]
description = "PyTorch-based modular deep learning framework for sequential recommendation systems"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Louis Wang", email = "louiswang524@gmail.com"}
]
maintainers = [
    {name = "Louis Wang", email = "louiswang524@gmail.com"}
]
keywords = [
    "pytorch",
    "recommendation-systems", 
    "deep-learning",
    "transformers",
    "sequential-modeling",
    "attention-mechanisms",
    "machine-learning"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0,<2.5.0",
    "pytorch-lightning>=2.0.0,<3.0.0",
    "hydra-core>=1.3.0,<2.0.0",
    "omegaconf>=2.3.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    "pandas>=1.5.0,<3.0.0",
    "scikit-learn>=1.0.0,<2.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "typing-extensions>=4.0.0,<5.0.0",
    "tqdm>=4.64.0,<5.0.0",
    "pyyaml>=6.0.0,<7.0.0",
    "jsonschema>=4.0.0,<5.0.0",
    "tensorboard>=2.12.0,<3.0.0",
    "wandb>=0.15.0,<1.0.0"
]

[project.urls]
"Homepage" = "https://github.com/louiswang524/pytorch-recsys"
"Bug Reports" = "https://github.com/louiswang524/pytorch-recsys/issues"
"Source" = "https://github.com/louiswang524/pytorch-recsys"
"Documentation" = "https://pytorch-recsys.readthedocs.io/"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "isort>=5.12.0,<6.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "sphinx>=5.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.0.0,<2.0.0",
    "types-PyYAML>=6.0.0,<7.0.0",
    "types-requests>=2.28.0,<3.0.0",
    "ipython>=8.0.0,<9.0.0",
    "jupyter>=1.0.0,<2.0.0",
    "notebook>=6.5.0,<8.0.0"
]
docs = [
    "sphinx>=5.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.0.0,<2.0.0",
    "sphinxcontrib-napoleon>=0.7"
]
serving = [
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0"
]
viz = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0"
]

[project.scripts]
pytorch-recsys = "pytorch_recsys.cli:main"

[tool.setuptools.dynamic]
version = {attr = "pytorch_recsys.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
known_first_party = ["pytorch_recsys"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "pytorch_lightning.*",
    "hydra.*",
    "omegaconf.*",
    "wandb.*",
    "tensorboard.*",
    "sklearn.*",
    "pandas.*",
    "numpy.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pytorch_recsys",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-ra"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gpu: marks tests that require GPU",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["pytorch_recsys"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
]
per-file-ignores = [
    "__init__.py:F401",  # imported but unused
    "tests/*:S101",      # use of assert
]